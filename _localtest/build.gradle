buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath('org.hidetake:groovy-ssh:2.9.0') {
            exclude module: 'groovy-all'
        }
        classpath group: "jaci.gradle", name: "EmbeddedTools", version: "+" 
    }
}

plugins {
    id 'com.gradle.build-scan' version '1.9'
}

apply plugin: "java"
apply plugin: "cpp"
apply plugin: "c"
apply plugin: "jaci.gradle.EmbeddedTools"

import jaci.gradle.deploy.*
import jaci.gradle.toolchains.*

deploy {
    targets {
        myTarget {
            addresses << "172.22.11.2" << "roborio-5333-frc.local" << "10.53.33.2"
            user = 'lvuser'
        }
    }
    deployers {
        myDeployer {
            targets << 'myTarget'

            directory = 'mydep'
            fileArtifact('myFileArtifact') {
                predeploy << { execute 'echo \$(pwd)' }
                file = file('myfile.dat')
                filename = "test"
                postdeploy << { executeMaybe 'cat test' }
            }
        }
        myOtherDeployer {
            targets << 'myTarget' << 'myOtherTarget'
        }
    }
}

buildScan {
  licenseAgreementUrl = 'https://gradle.com/terms-of-service'
  licenseAgree = 'yes'
}

model {
    platforms {
        'any-32' { architecture "x86" }
        'any-64' { architecture "x86_64" }
        roborio { operatingSystem 'linux'; architecture 'arm' }
    }

    toolChains {
        roborioGcc(CrossGcc) {
            target('roborio') {
                defineTools(it, "arm-frc-linux-gnueabi-", '')
            }
        }
        gcc(Gcc) { }
        visualCpp(VisualCpp) { }
    }

    components {
        my_other_program(NativeLibrarySpec) {
            // targetPlatform "any-32"
            targetPlatform "roborio"
            // targetPlatform "any-64"
            sources.cpp {
                source.srcDirs "src_c_lib"
            }
        }
        my_program(NativeExecutableSpec) {
            targetPlatform "any-32"
            targetPlatform "any-64"
            targetPlatform "roborio"
            sources.cpp {
                source.srcDirs "src_c"
            }
        }
    }
}

task testMe() {
    doLast {
        println project.extensions.deploy.targets.first().dump()
        println ""
        println project.extensions.deploy.deployers.first()
        println ""
    }
}

task myLastTask() {
    doLast {
        project.extensions.deploy.deployers.each {
            println it
            println it._active
            println ""
        }
    }
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}
